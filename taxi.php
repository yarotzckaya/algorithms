<?php
/**
После окончания уроков n групп школьников вышли на улицу и собрались ехать домой к Поликарпу на празднование его дня рождения. Известно, что i-ая группа состоит из si друзей (1 ≤ si ≤ 4), которые не хотят расставаться по пути к Поликарпу. Решено ехать на такси. Каждая машина может вместить не более четырех пассажиров. Какое минимальное количество машин потребуется школьникам, если каждая группа должна целиком находиться в одной из машин такси (но одна машина может вмещать более чем одну группу)?

Входные данные
В первой строке записано целое число n (1 ≤ n ≤ 100000000) — количество групп школьников. Вторая строка содержит последовательность целых чисел s1, s2, ..., sn (1 ≤ si ≤ 4). Числа записаны через пробел, si — количество ребят в i-ой группе.

Выходные данные
Выведите единственное число — минимальное необходимое количество такси, чтобы отвезти всех ребят к Поликарпу.


Примечание
В первом тесте возможно следующее распределение по четырем машинам:

третья группа (из четырех школьников),
четвертая группа (из трех школьников),
пятая группа (из трех школьников),
первая и вторая группы (из одного и двух школьников соответственно).
Существуют и другие способы расположиться в четырех машинах.
*/

fscanf(STDIN, '%d\n', $n);	// считываем кол-во групп школьников

$line = fgets(STDIN);				// считываем группы школьников как строку
$groups = explode(' ', $line);	// теперь groups - это массив чисел

$groupOfOne = 0;
$groupOfTwo = 0;
$groupOfThree = 0;
$groupOfFour = 0;

for($i = 0; $i < count($groups); ++$i) {
	$groups[$i] = (int)$groups[$i];
	if($groups[$i] == 1) {
		$groupOfOne += 1;
	}
	if($groups[$i] == 2) {
		$groupOfTwo += 1;
	}
	if($groups[$i] == 3) {
		$groupOfThree += 1;
	}
	if($groups[$i] == 4) {
		$groupOfFour += 1;
	}
}

// all 4
$taxi = 0;
$taxi += $groupOfFour;

// 3 + 1
$min = min($groupOfThree, $groupOfOne);
$taxi += $min;
$groupOfThree -= $min;
$groupOfOne -= $min;

// all 3
$taxi += $groupOfThree;

// 2
$taxi += floor($groupOfTwo / 2);
$groupOfTwo = $groupOfTwo % 2;

// all 2 + 1
$fancyCar = 0;
$fancyCar = $groupOfTwo * 2;

while($groupOfOne > 0 && $fancyCar < 4) {
	$fancyCar += 1;
	$groupOfOne -= 1;
}

if($fancyCar > 0) {
	$taxi += 1;
}

// all 1
$taxi += ceil($groupOfOne / 4);

printf($taxi);

// if((array_sum($groups) % 4) == 0){		// проверяем, можно ли поделить всех школьников на группы, по 4 человека в каждой
// 	$cars = array_sum($groups) / 4;		// в каждую машину сажаем 1 группу школьников
// 	printf($cars);
// 	} else {
	
	// $cars = array();
	
	// $total = ceil(array_sum($groups) / 4);
	

	// printf($total);

//этим решением я пыталась создать двумерный массив, где i - это машины с 4 местами, а j - это школьники. Оно сработало не на всех тестах.

// 	for($i = 0; $i < $n; $i++) { 	
// 		for ($j = 0; $j < 4; $j++) { 
// 			$cars[$i][$j] = $groups[$i];
// 			if(count($cars[$i]) > $n) {
// 				break;
// 			}
// 		}
		
// 	}


// printf(count($cars));







